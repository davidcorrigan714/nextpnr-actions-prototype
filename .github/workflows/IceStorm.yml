name: IceStorm

on:
  workflow_dispatch:
  push:
    paths: '.github/workflows/IceStorm.yml'

jobs:
  build-IceStorm:
    name: Build IceStorm
    runs-on: windows-2019

    steps:
      - name: Checkout IceStorm
        uses: actions/checkout@v2
        with:
          repository: YosysHQ/icestorm
          path: icestorm
          
      - name: Setup Msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            msys/bison
            msys/flex
            msys/libreadline-devel
            msys/gawk
            msys/tcl
            msys/libffi-devel
            msys/pkg-config
            python3
            mingw64/mingw-w64-x86_64-python3-pip
            mingw64/mingw-w64-x86_64-dlfcn
            mingw64/mingw-w64-x86_64-libftdi
            mingw-w64-x86_64-toolchain

      - name: Build IceStorm
        shell: msys2 {0}
        working-directory: icestorm
        run: |
          mkdir buildProducts
          pip3 install xdot
          mingw32-make -j4
          mingw32-make DESTDIR=../../buildProducts PREFIX='' install
          
      # TODO Tests of some kind to validate it built properly
          
      - name: Upload Zip
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: icestorm
          path: buildProducts

      - name: Zip Release Files
        run: |
          Compress-Archive -Path .\buildProducts\* -DestinationPath buildProducts.zip

      - name: Get current date
        id: date
        run: echo "name=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Create Release
        uses: actions/create-release@v1.1.4
        id: create_release
        with:
          tag_name: IceStorm-${{ steps.date.outputs.date }}
          release_name: IceStorm-${{ steps.date.outputs.date }}
          body: Nightly build for IceStorm

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # The path to the asset you want to upload
          asset_path: buildProducts.zip
          # The name of the asset you want to upload
          asset_name: IceStorm-Win-x86_64-${{ steps.date.outputs.date }}.zip
          # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
          asset_content_type: application/zip
    
