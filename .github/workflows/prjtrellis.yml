name: prjtrellis

on:
  workflow_dispatch:
  push:
    paths: '.github/workflows/prjtrellis.yml'
    
jobs:
  prjtrellis:
    name: prjtrellis
    #runs-on: self-hosted
    runs-on: windows-2019

    steps:
      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1
        
      - name: Download & Build Boost
        run: |
          choco install 7zip
          $WebClient = New-Object System.Net.WebClient
          $WebClient.DownloadFile("https://dl.bintray.com/boostorg/release/1.73.0/source/boost_1_73_0.zip",(Get-Location).tostring()+"\boost_1_73_0.7z")
          set-alias sz "$env:ProgramFiles\7-Zip\7z.exe"
          sz x ".\boost_1_73_0.7z"
          $vs_env = (C:\ProgramData\Chocolatey\bin\vswhere.exe -products * -requires Microsoft.Component.MSBuild -property installationPath -latest)+"\VC\Auxiliary\Build\vcvarsamd64_x86.bat"
          & {
          .$vs_env
          cd boost_1_73_0
          .\bootstrap.bat
          .\b2 link=static runtime-link=static variant=release
          .\b2 link=static runtime-link=static variant=debug
          }
          $VS_Root = (C:\ProgramData\Chocolatey\bin\vswhere.exe -products * -requires Microsoft.Component.MSBuild -property installationPath -latest)+"\VC\Auxiliary\VS"
          Copy-Item -Recurse "boost" -Destination "$VS_Root\include"
          Copy-Item -Recurse "stage\lib\*" -Destination "$VS_Root\lib\x64"
          echo "BOOST_LIBRARYDIR=$VS_Root\lib\x64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "BOOST_INCLUDEDIR=$VS_Root\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Checkout prjtrellis
        uses: actions/checkout@v2
        with:
          repository: YosysHQ/prjtrellis
          path: prjtrellis
          submodules: recursive
          fetch-depth: 0

      - name: Build prjtrellis
        working-directory: prjtrellis\libtrellis\
        run: |
          cmake -DSTATIC_BUILD=ON -DBUILD_SHARED=OFF -DBoost_DEBUG=ON .
          msbuild /t:Build /p:Configuration=Release libtrellis.sln

      - name: Install prjtrellis
        run: |
          mkdir releaseDir
          cmake -DCMAKE_INSTALL_PREFIX="releaseDir" -DBUILD_TYPE=Release -P .\prjtrellis\libtrellis\cmake_install.cmake
          dir releaseDir
          dir $Env:GITHUB_WORKSPACE\prjtrellis\libtrellis\Release
      
      - name: Upload Binaries
        uses: actions/upload-artifact@v2.2.1
        with:
          name: prjtrellis-all
          path: ./prjtrellis
          #if-no-files-found: error
          
      - name: Upload Binaries
        uses: actions/upload-artifact@v2.2.1
        with:
          name: prjtrellis
          path: .\releaseDir
          #if-no-files-found: error
