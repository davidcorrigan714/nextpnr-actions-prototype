name: prjtrellis

on:
  workflow_dispatch:
  push:
    paths: '.github/workflows/prjtrellis.yml'
    
jobs:
  prjtrellis:
    name: prjtrellis
    #runs-on: self-hosted
    runs-on: windows-2019

    steps:
      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1

      # Have to be careful with the Python version,
      # there's a conflict with MSVC headers and the copysign function
      # that was patched in Nov/Dec 2020 and backported to 3.8.8 and that
      # seems to be supported by everything else so sticking with it
      - name: Upgrade Python
        run: |
          $WebClient = New-Object System.Net.WebClient          
          $WebClient.DownloadFile("https://www.python.org/ftp/python/3.8.7/python-3.8.7-amd64.exe",(Get-Location).tostring()+"\python3.exe")
          cmd /c start /wait python3.exe /quiet TargetDir=$Env:GITHUB_WORKSPACE\python Shortcuts=0 Include_launcher=1 PrependPath=1
          cmd /c mklink $Env:GITHUB_WORKSPACE\python\python3.exe $Env:GITHUB_WORKSPACE\python\python.exe
          echo ($Env:GITHUB_WORKSPACE + "\python\") | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          cat $env:GITHUB_PATH

      - name: Download & Build Boost
        run: |
          choco install 7zip -y
          $WebClient = New-Object System.Net.WebClient
          $WebClient.DownloadFile("https://dl.bintray.com/boostorg/release/1.73.0/source/boost_1_73_0.zip",(Get-Location).tostring()+"\boost_1_73_0.7z")
          set-alias sz "$env:ProgramFiles\7-Zip\7z.exe"
          sz x ".\boost_1_73_0.7z"
          $vs_env = (C:\ProgramData\Chocolatey\bin\vswhere.exe -products * -requires Microsoft.Component.MSBuild -property installationPath -latest)+"\VC\Auxiliary\Build\vcvarsamd64_x86.bat"
          $pythonDir=($Env:GITHUB_WORKSPACE.replace('\','/') + "/python/")
          & {
          .$vs_env
          cd boost_1_73_0
          .\bootstrap.bat
          echo "using python : 3.8 : $pythonDir ;" | Out-File "project-config.jam" -encoding ASCII -Append
          .\b2 link=static runtime-link=static variant=release python=3.8
          .\b2 link=static runtime-link=static variant=debug python=3.8
          }
          $VS_Root = (C:\ProgramData\Chocolatey\bin\vswhere.exe -products * -requires Microsoft.Component.MSBuild -property installationPath -latest)+"\VC\Auxiliary\VS"
          Copy-Item -Recurse "boost" -Destination "$VS_Root\include"
          Copy-Item -Recurse "stage\lib\*" -Destination "$VS_Root\lib\x64"
          echo "BOOST_LIBRARYDIR=$VS_Root\lib\x64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "BOOST_INCLUDEDIR=$VS_Root\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Checkout prjtrellis
        uses: actions/checkout@v2
        with:
          repository: YosysHQ/prjtrellis
          path: prjtrellis
          submodules: recursive
          fetch-depth: 0

      - name: Build prjtrellis
        working-directory: prjtrellis\libtrellis\
        run: |
          $Python_EXECUTABLE = $env:GITHUB_PATH + "\python\python.exe"
          cmake -DSTATIC_BUILD=ON -DBUILD_SHARED=OFF -DPython_EXECUTABLE=$Python_EXECUTABLE .
          msbuild /t:Build /p:Configuration=Release libtrellis.sln

      - name: Install prjtrellis
        run: |
          mkdir releaseDir
          cmake -DCMAKE_INSTALL_PREFIX="releaseDir" -DBUILD_TYPE=Release -P .\prjtrellis\libtrellis\cmake_install.cmake
          dir releaseDir
          dir $Env:GITHUB_WORKSPACE\prjtrellis\libtrellis\Release
      
      - name: Upload Binaries
        uses: actions/upload-artifact@v2.2.1
        with:
          name: prjtrellis-all
          path: ./prjtrellis
          #if-no-files-found: error
          
      - name: Upload Binaries
        uses: actions/upload-artifact@v2.2.1
        with:
          name: prjtrellis
          path: .\releaseDir
          #if-no-files-found: error
