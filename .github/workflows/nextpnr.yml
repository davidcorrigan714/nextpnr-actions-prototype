name: nextpnr-ci

on:
  workflow_dispatch:
  push:
    paths: '.github/workflows/nextpnr.yml'
    branches:
      - main
  schedule:
    - cron: "9 0 * * *"
jobs:
  next-pnr:
    name: prjtrellis
    #runs-on: self-hosted
    runs-on: windows-2019

    steps:
      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1

      - name: Download latest prjtrellis
        uses: actions/github-script@v3.1.0
        with:
          # The script to run
          script: |
            const releases = await github.repos.getReleaseByTag({
             owner: "davidcorrigan714",
             repo: "nextpnr-actions-prototype",
             tag: "prjtrellis/nightly" });
            var releaseId = releases.data.id;

            const releaseAssets = await github.repos.listReleaseAssets({
             owner: "davidcorrigan714",
             repo: "nextpnr-actions-prototype",
             release_id: releaseId});
            var releaseAssetsData = releaseAssets.data;
            
            var latestAssetDate = "0000-00-00";
            var latestAssetUrl = "";
            for(var asset in releaseAssetsData){
              if(releaseAssetsData[asset].created_at > latestAssetDate){
                latestAssetDate = releaseAssetsData[asset].created_at;
                latestAssetUrl = releaseAssetsData[asset].browser_download_url;
              }
            }

            console.log("Downloading: " + latestAssetUrl);

            var https = require('https');
            var fs = require('fs');
            var dest = 'prjtrellis.zip';
            var url = latestAssetUrl;
            var file = fs.createWriteStream(dest);

            const request = function(url) {
              https.get(url, (response) => {
                var body = [];
                if (response.statusCode == 302) {
                  body = [];
                  request(response.headers.location);
                } else {
                  response.pipe(file);
                  file.on('finish', function() {
                    file.close();
                  });
                };
              } );
              
            };
            request(url);

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: prjtrellis.zip
          path: prjtrellis.zip

      - name: Unzip prjtrellis
        run: |
          Expand-Archive -Path prjtrellis.zip  -DestinationPath .\prjtrellis
          dir .\prjtrellis

      - name: Download latest prjoxide
        uses: actions/github-script@v3.1.0
        with:
          # The script to run
          script: |
            const releases = await github.repos.getReleaseByTag({
             owner: "davidcorrigan714",
             repo: "nextpnr-actions-prototype",
             tag: "prjoxide/nightly" });
            var releaseId = releases.data.id;

            const releaseAssets = await github.repos.listReleaseAssets({
             owner: "davidcorrigan714",
             repo: "nextpnr-actions-prototype",
             release_id: releaseId});
            var releaseAssetsData = releaseAssets.data;
            
            var latestAssetDate = "0000-00-00";
            var latestAssetUrl = "";
            for(var asset in releaseAssetsData){
              if(releaseAssetsData[asset].created_at > latestAssetDate){
                latestAssetDate = releaseAssetsData[asset].created_at;
                latestAssetUrl = releaseAssetsData[asset].browser_download_url;
              }
            }

            console.log("Downloading: " + latestAssetUrl);

            var https = require('https');
            var fs = require('fs');
            var dest = 'prjoxide.zip';
            var url = latestAssetUrl;
            var file = fs.createWriteStream(dest);

            const request = function(url) {
              https.get(url, (response) => {
                var body = [];
                if (response.statusCode == 302) {
                  body = [];
                  request(response.headers.location);
                } else {
                  response.pipe(file);
                  file.on('finish', function() {
                    file.close();
                  });
                };
              } );
              
            };
            request(url);

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: prjoxide.zip
          path: prjoxide.zip

      - name: Unzip prjoxide
        run: |
          Expand-Archive -Path prjoxide.zip  -DestinationPath .\prjoxide
          dir .\prjoxide

      # Have to be careful with the Python version,
      # there's a conflict with MSVC headers and the copysign function
      # that was patched in Nov/Dec 2020 and backported to 3.8.8 and that
      # seems to be supported by everything else so sticking with it
      - name: Upgrade Python
        run: |
          $WebClient = New-Object System.Net.WebClient          
          $WebClient.DownloadFile("https://www.python.org/ftp/python/3.8.7/python-3.8.7-amd64.exe",(Get-Location).tostring()+"\python3.exe")
          cmd /c start /wait python3.exe /quiet TargetDir=$Env:GITHUB_WORKSPACE\python Shortcuts=0 Include_launcher=1 PrependPath=1
          cmd /c mklink $Env:GITHUB_WORKSPACE\python\python3.exe $Env:GITHUB_WORKSPACE\python\python.exe
          echo ($Env:GITHUB_WORKSPACE + "\python\") | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Download & Build Boost
        run: |
          choco install 7zip -y
          $WebClient = New-Object System.Net.WebClient
          $WebClient.DownloadFile("https://dl.bintray.com/boostorg/release/1.73.0/source/boost_1_73_0.zip",(Get-Location).tostring()+"\boost_1_73_0.zip")
          set-alias sz "$env:ProgramFiles\7-Zip\7z.exe"
          sz x ".\boost_1_73_0.zip"
          $vs_env = (C:\ProgramData\Chocolatey\bin\vswhere.exe -products * -requires Microsoft.Component.MSBuild -property installationPath -latest)+"\VC\Auxiliary\Build\vcvarsamd64_x86.bat"
          $pythonDir=($Env:GITHUB_WORKSPACE.replace('\','/') + "/python/")
          & {
          .$vs_env
          cd boost_1_73_0
          .\bootstrap.bat
          echo "using python : 3.8 : $pythonDir ;" | Out-File "project-config.jam" -encoding ASCII -Append
          .\b2 link=static runtime-link=static variant=release python=3.8
          .\b2 link=static runtime-link=static variant=debug python=3.8
          }
          $VS_Root = (C:\ProgramData\Chocolatey\bin\vswhere.exe -products * -requires Microsoft.Component.MSBuild -property installationPath -latest)+"\VC\Auxiliary\VS"
          Copy-Item -Recurse "boost" -Destination "$VS_Root\include"
          Copy-Item -Recurse "stage\lib\*" -Destination "$VS_Root\lib\x64"
          echo "BOOST_LIBRARYDIR=$VS_Root\lib\x64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "BOOST_INCLUDEDIR=$VS_Root\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Checkout nextpnr
        uses: actions/checkout@v2
        with:
          repository: YosysHQ/nextpnr
          path: nextpnr

      - name: Build nextpnr
        working-directory: nextpnr
        run: |
          vcpkg.exe install qt5-base:x64-windows eigen3:x64-windows
          vcpkg.exe integrate install
          $Env:PYTHONPATH = "$Env:GITHUB_WORKSPACE\prjtrellis\share\trellis\util\common;$Env:GITHUB_WORKSPACE\prjtrellis\share\trellis\timing\util"
          cmake . -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DSTATIC_BUILD=ON -DPython_ADDITIONAL_VERSIONS='3.8' -DCMAKE_CXX_FLAGS='/D "WIN32" /EHsc' -DARCH=ecp5 -DCMAKE_PREFIX_PATH="$Env:GITHUB_WORKSPACE\prjtrellis"
          msbuild /t:Build /p:Configuration=Release /p:Platform=x64 nextpnr.sln
      
      - name: Install nextpnr
        run: |
          cmake -DCMAKE_INSTALL_PREFIX="releaseDir" -DBUILD_TYPE=Release -P .\nextpnr\cmake_install.cmake 
          dir releasedir
          
      - name: Upload Binaries
        uses: actions/upload-artifact@v2.2.1
        with:
          name: nextpnr-all
          path: .
          #if-no-files-found: error

      - name: Copy Boost Into Release
        run: |
          Copy-Item -Recurse "boost_1_73_0\stage\lib\*.dll" -Destination "releaseDir\bin"
          
      - name: Upload Binaries
        uses: actions/upload-artifact@v2.2.1
        with:
          name: nextpnr
          path: .\releaseDir
          #if-no-files-found: error
