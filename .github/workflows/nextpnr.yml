name: nextpnr-ci

on:
  push:
    paths: '.github/workflows/nextpnr.yml'
    
jobs:
  next-pnr:
    name: prjtrellis
    runs-on: windows-2019

    steps:
      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1
  
      - name: Add Boost to VS
        run: |
          $VS_Root = (C:\ProgramData\Chocolatey\bin\vswhere.exe -products * -requires Microsoft.Component.MSBuild -property installationPath -latest)+"\VC\Auxiliary\VS"
          #Copy-Item -Recurse $Env:BOOST_ROOT_1_72_0\include\boost -Destination "$VS_Root\include"
          #Copy-Item -Recurse $Env:BOOST_ROOT_1_72_0\lib\* -Destination "$VS_Root\lib\x64"
          echo "BOOST_LIBRARYDIR=$VS_Root\lib\x64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "BOOST_INCLUDEDIR=$VS_Root\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Checkout prjtrellis
        uses: actions/checkout@v2
        with:
          repository: YosysHQ/prjtrellis
          path: prjtrellis
          fetch-depth: 0

      - name: Build prjtrellis
        working-directory: prjtrellis\libtrellis\
        run: |
          #cmake -DCMAKE_CXX_FLAGS='/D "BOOST_ALL_DYN_LINK"' .
          #msbuild /t:Build /p:Configuration=Release libtrellis.sln
          
      - name: Install prjtrellis
        run: |
          #mkdir releaseDir
          #cmake -DCMAKE_INSTALL_PREFIX="releaseDir" -DBUILD_TYPE=Release -P cmake_install.cmake .\prjtrellis\libtrellis\
          #dir releaseDir

      - name: Checkout nextpnr
        uses: actions/checkout@v2
        with:
          repository: YosysHQ/nextpnr
          submodules: recursive
          path: nextpnr

      - name: Build nextpnr
        working-directory: nextpnr
        run: |
          vcpkg.exe install qt5-base:x64-windows eigen3:x64-windows
          vcpkg.exe integrate install
          
