name: nextpnr-ci

on:
  workflow_dispatch:
  push:
    paths: '.github/workflows/nextpnr.yml'
    
jobs:
  next-pnr:
    name: prjtrellis
    runs-on: windows-2019
    #runs-on: self-hosted

    steps:
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          # Artifact name
          name: include
          # A file, directory or wildcard pattern that describes what to upload
          path: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.28.29333\include\
      
      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1
  
      - name: Add Boost to VS
        run: |
          $VS_Root = (C:\ProgramData\Chocolatey\bin\vswhere.exe -products * -requires Microsoft.Component.MSBuild -property installationPath -latest)+"\VC\Auxiliary\VS"
          Copy-Item -Recurse $Env:BOOST_ROOT_1_72_0\include\boost -Destination "$VS_Root\include"
          Copy-Item -Recurse $Env:BOOST_ROOT_1_72_0\lib\* -Destination "$VS_Root\lib\x64"
          echo "BOOST_LIBRARYDIR=$VS_Root\lib\x64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "BOOST_INCLUDEDIR=$VS_Root\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Checkout prjtrellis
        uses: actions/checkout@v2
        with:
          repository: YosysHQ/prjtrellis
          path: prjtrellis
          submodules: recursive
          fetch-depth: 0

      - name: Build prjtrellis
        working-directory: prjtrellis\libtrellis\
        run: |
          cmake -DCMAKE_CXX_FLAGS='/D "BOOST_ALL_DYN_LINK"' .
          msbuild /t:Build /p:Configuration=Release libtrellis.sln
          
      - name: Install prjtrellis
        run: |
          mkdir releaseDir
          cmake -DCMAKE_INSTALL_PREFIX="releaseDir" -DBUILD_TYPE=Release -P .\prjtrellis\libtrellis\cmake_install.cmake
          dir releaseDir
          dir $Env:GITHUB_WORKSPACE\prjtrellis\libtrellis\Release

      - name: Checkout nextpnr
        uses: actions/checkout@v2
        with:
          repository: YosysHQ/nextpnr
          path: nextpnr

      - name: Build nextpnr
        working-directory: nextpnr
        run: |
          $env:Path += ";"+$Env:BOOST_ROOT_1_72_0+"\lib"
          vcpkg.exe install qt5-base:x64-windows eigen3:x64-windows
          vcpkg.exe integrate install
          $Env:PYTHONPATH = "$Env:GITHUB_WORKSPACE\prjtrellis\util\common;$Env:GITHUB_WORKSPACE\prjtrellis\timing\util"
          cmake . -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_CXX_FLAGS='/D "BOOST_ALL_DYN_LINK" /D "WIN32" /EHsc' -DARCH=ecp5 -DCMAKE_PREFIX_PATH="$Env:GITHUB_WORKSPACE\prjtrellis\libtrellis\Release"
          msbuild /t:Build /p:Configuration=Release /p:Platform=x64 nextpnr.sln
      
      - name: Install nextpnr
        run: |
          cmake -DCMAKE_INSTALL_PREFIX="releaseDir" -DBUILD_TYPE=Release -P .\nextpnr\cmake_install.cmake 
          dir releasedir
