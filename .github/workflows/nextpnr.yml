name: nextpnr-ci

on:
  workflow_dispatch:
  push:
    paths: '.github/workflows/nextpnr.yml'
    
jobs:
  next-pnr:
    name: prjtrellis
    runs-on: windows-2019
    #runs-on: self-hosted

    steps:
      # BuildTools seems a bit iffy version to version and the one currently on the GitHub runners is throwing weird errors
      # so we'll lock it to a working version and update it occasionally.
      # https://docs.microsoft.com/en-us/visualstudio/releases/2019/history
      - name: Install BuildTools
        run: |
          $WebClient = New-Object System.Net.WebClient
          $WebClient.DownloadFile("https://download.visualstudio.microsoft.com/download/pr/1206a800-42a6-4dd5-8b7d-27ccca92e823/cf739d701898f888a4c0b49722791e5ff450d40c6a986f69ecfb1e4da384e126/vs_BuildTools.exe",(Get-Location).tostring()+"\vs_BuildTools.exe")
          $proc = Start-Process -FilePath vs_BuildTools.exe -ArgumentList "--passive", "--add", "Microsoft.VisualStudio.Workload.VCTools", "--includeRecommended", "--wait" -Wait -PassThru
          $BUILD_TOOLS_DIR = "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin"
          echo "BUILD_TOOLS_DIR=$BUILD_TOOLS_DIR" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo $BUILD_TOOLS_DIR
          dir $BUILD_TOOLS_DIR
  
      - name: Add Boost to VS
        run: |
          echo $Env:BUILD_TOOLS_DIR
          $VS_Root = "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\VS"
          echo $VS_Root
          Copy-Item -Recurse $Env:BOOST_ROOT_1_72_0\include\boost -Destination "$VS_Root\include"
          Copy-Item -Recurse $Env:BOOST_ROOT_1_72_0\lib\* -Destination "$VS_Root\lib\x64"
          echo "BOOST_LIBRARYDIR=$VS_Root\lib\x64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "BOOST_INCLUDEDIR=$VS_Root\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Checkout prjtrellis
        uses: actions/checkout@v2
        with:
          repository: YosysHQ/prjtrellis
          path: prjtrellis
          submodules: recursive
          fetch-depth: 0

      - name: Build prjtrellis
        working-directory: prjtrellis\libtrellis\
        run: |
          echo $Env:BOOST_INCLUDEDIR
          echo $Env:BOOST_LIBRARYDIR
          dir $Env:BOOST_INCLUDEDIR
          dir $Env:BOOST_LIBRARYDIR
          cmake -DCMAKE_CXX_FLAGS='/D "BOOST_ALL_DYN_LINK"'  -DBOOST_DEBUG=ON .
          .$Env:BUILD_TOOLS_DIR\msbuild.exe /t:Build /p:Configuration=Release libtrellis.sln
          
      - name: Install prjtrellis
        run: |
          mkdir releaseDir
          cmake -DCMAKE_INSTALL_PREFIX="releaseDir" -DBUILD_TYPE=Release -P .\prjtrellis\libtrellis\cmake_install.cmake
          dir releaseDir
          dir $Env:GITHUB_WORKSPACE\prjtrellis\libtrellis\Release

      - name: Checkout nextpnr
        uses: actions/checkout@v2
        with:
          repository: YosysHQ/nextpnr
          path: nextpnr

      - name: Build nextpnr
        working-directory: nextpnr
        run: |
          $env:Path += ";"+$Env:BOOST_ROOT_1_72_0+"\lib"
          vcpkg.exe install qt5-base:x64-windows eigen3:x64-windows
          vcpkg.exe integrate install
          $Env:PYTHONPATH = "$Env:GITHUB_WORKSPACE\prjtrellis\util\common;$Env:GITHUB_WORKSPACE\prjtrellis\timing\util"
          cmake . -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_CXX_FLAGS='/D "BOOST_ALL_DYN_LINK" /D "WIN32" /EHsc' -DARCH=ecp5 -DCMAKE_PREFIX_PATH="$Env:GITHUB_WORKSPACE\prjtrellis\libtrellis\Release"
          .$Env:BUILD_TOOLS_DIR\msbuild.exe /t:Build /p:Configuration=Release /p:Platform=x64 nextpnr.sln
      
      - name: Install nextpnr
        run: |
          cmake -DCMAKE_INSTALL_PREFIX="releaseDir" -DBUILD_TYPE=Release -P .\nextpnr\cmake_install.cmake 
          dir releasedir
