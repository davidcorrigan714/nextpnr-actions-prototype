name: prjoxide

on:
  workflow_dispatch:
  push:
    paths: '.github/workflows/prjoxide.yml'

jobs:
  build-prjoxide:
    name: Project Oxide
    runs-on: windows-2019

    steps:
      - name: Checkout Oxide
        uses: actions/checkout@v2
        with:
          repository: daveshah1/prjoxide
          path: prjoxide
          
      - name: Setup Msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-rust
            base-devel

      - name: Build prjoxide
        shell: msys2 {0}
        working-directory: prjoxide/libprjoxide
        run: |
          mkdir output
          cargo install --path prjoxide --root ./output
          
      # TODO Tests of some kind to validate it built properly
          
      - name: Upload Zip
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: prjoxide
          path: prjoxide/libprjoxide/output/

      - name: Zip Release Files
        run: |
          Compress-Archive -Path .\prjoxide\libprjoxide\output\* -DestinationPath buildProducts.zip

      - name: Create tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.updateRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "tags/prjoxide/nightly",
              sha: context.sha
            })

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Create Release
        uses: actions/create-release@v1.1.4
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: prjoxide/nightly
          release_name: prjoxide Nightly
          body: Nightly build for prjoxide

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # The path to the asset you want to upload
          asset_path: buildProducts.zip
          # The name of the asset you want to upload
          asset_name: prjoxide-Win-x86_64-${{ steps.date.outputs.date }}.zip
          # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
          asset_content_type: application/zip
    
